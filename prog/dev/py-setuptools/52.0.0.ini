[ src ]

url = https://github.com/pypa/setuptools/archive/v<ver>/setuptools-<ver>.tar.gz
src_type = tar
src_dirname = setuptools-<ver>



[ vars ]



[ std ]

env =
prepare = tar --no-same-owner -xf <src_path> -C <tmp_dir>
configure =
build = python setup.py build
pkg_create = mkdir build/scripts-3.9 &&
	python setup.py install
	--prefix=/usr
	--skip-build
	--root=<pkg_dir>
	--optimize=1 &&
	 find <pkg_dir> -depth -type f -name '*.py[co]' -delete
		 -o -type d -name __pycache__ -delete



[ musl ]

env = SETUPTOOLS_INSTALL_WINDOWS_SPECIFIC_FILES=0

# upstream devendoring logic is badly broken, see:
#   https://bugs.archlinux.org/task/58670
#   https://github.com/pypa/pip/issues/5429
#   https://github.com/pypa/setuptools/issues/1383
# the simplest fix is to simply rewrite import paths 
prepare = tar --no-same-owner -xf <src_path> -C <tmp_dir> &&
	cd <build_dir> &&
	rm -r pkg_resources/extern pkg_resources/_vendor
		setuptools/extern setuptools/_vendor &&

	for _module in setuptools pkg_resources '' ; do
		find . -name \*.py -exec sed -i
			-e 's/from '$_module.extern' import/import/'
			-e 's/from '$_module.extern'./from /'
			-e 's/import '$_module.extern'./import /'
			-e "s/__import__('$_module.extern./__import__('/" {} +;
	done

# fix post-release tag
configure = sed -e '/tag_build = .post/d' -e '/tag_date = 1/d' -i setup.cfg &&
	python3 bootstrap.py

build = python setup.py build
pkg_create = mkdir build/scripts-3.9 &&
	python setup.py install
	--prefix=
	--skip-build
	--root=<pkg_dir>
	--optimize=1 &&
	 find <pkg_dir> -depth -type f -name '*.py[co]' -delete
		 -o -type d -name __pycache__ -delete

