[ src ]

url = https://ftp.gnu.org/gnu/binutils/binutils-<ver>.tar.xz
src_type = tar
src_dirname = <prog>-<ver>



[ vars ]



[ std ]

env =
prepare = tar --no-same-owner -xf <src_path> -C <tmp_dir>
configure = mkdir -p build && cd build && ../configure
	--prefix=/usr
	--enable-gold
	--enable-ld=default
	--enable-plugins
	--enable-shared
	--disable-nls
	--disable-werror
	--enable-64-bit-bfd
	--with-system-zlib

build = cd build && make tooldir=/usr
pkg_create = cd build && make DESTDIR=<pkg_dir> tooldir=/usr install &&
	rm -v <pkg_dir>/usr/lib/lib{bfd,ctf,ctf-nobfd,opcodes}.a &&
	rm -r <pkg_dir>/usr/share/info/



[ musl ]

env = CC="musl-gcc -static"
prepare = tar --no-same-owner -xf <src_path> -C <tmp_dir>
configure = git apply -v <prog_dir>/patch/<ver>/CVE-2022-38533.patch &&
	git apply -v <prog_dir>/patch/<ver>/ld-fix-static-linking.patch &&
	git apply -v <prog_dir>/patch/<ver>/revert_gnu.attributes_check.patch &&
	sed '6009s/$add_dir//' -i ltmain.sh &&
	mkdir -p build && cd build && ../configure
	--prefix=
	--target=x86_64-pc-linux-musl
	--enable-ld=no
	--enable-plugins
	--enable-64-bit-bfd
	--enable-deterministic-archives
	--enable-static
	--enable-gprofng=no
	--enable-default-execstack=no
	--with-static-standard-libraries
	--with-pic
	--disable-host-shared
	--disable-shared
	--disable-separate-code
	--disable-werror
	--disable-multilib
	--disable-nls
	--disable-werror
	--with-system-zlib

build = cd build && make tooldir=/
pkg_create = cd build && make DESTDIR=<pkg_dir> tooldir=/ install &&
	rm -r <pkg_dir>/share/info/



[ bootstrap_1_cross ]

env =
prepare = tar --no-same-owner -xf <src_path> -C <tmp_dir>
configure = mkdir -p build && cd build && ../configure
	--prefix=/tools
	--with-sysroot=<root_dir>
	--target=${TARGET_TRIPLET}
	--enable-gprofng=no
	--disable-nls
	--disable-werror

build = cd build && make
pkg_create = cd build && make DESTDIR=<pkg_dir> install



[ bootstrap_2_cross ]


# binutils is shipped with an outdated libtool copy. It lacks sysroot support
# so the produced binaries will be mistakenly linked to libraries from
# the host distro. sed here is a workaround for that.
# use "MAKEFLAGS=j1" if errors show up
env = CFLAGS= LDFLAGS=
prepare = tar --no-same-owner -xf <src_path> -C <tmp_dir>
configure = sed '6009s/$add_dir//' -i ltmain.sh &&
	mkdir -p build && cd build && ../configure
	--prefix=/usr
	--build=$(../config.guess)
	--host=${TARGET_TRIPLET}
	--disable-nls
	--enable-shared
	--enable-gprofng=no
	--disable-werror
	--disable-nls
	--enable-64-bit-bfd

build = cd build && make
pkg_create = cd build && make DESTDIR=<pkg_dir> install



[ bootstrap ]

env =
prepare = tar --no-same-owner -xf <src_path> -C <tmp_dir>
configure = mkdir -p build && cd build && ../configure
	--prefix=/usr
	--enable-gold
	--enable-ld=default
	--enable-plugins
	--enable-shared
	--disable-nls
	--disable-werror
	--enable-64-bit-bfd
	--with-system-zlib

build = cd build && make tooldir=/usr
pkg_create = cd build && make DESTDIR=<pkg_dir> tooldir=/usr install &&
	rm -v <pkg_dir>/usr/lib/lib{bfd,ctf,ctf-nobfd,opcodes}.a



[ musl_1_cross ]

env =
prepare = tar --no-same-owner -xf <src_path> -C <tmp_dir>
configure = git apply -v <prog_dir>/patch/<ver>/CVE-2022-38533.patch &&
	git apply -v <prog_dir>/patch/<ver>/ld-fix-static-linking.patch &&
	git apply -v <prog_dir>/patch/<ver>/revert_gnu.attributes_check.patch &&
	sed '6009s/$add_dir//' -i ltmain.sh &&
	mkdir -p build && cd build && ../configure
	--prefix=/cross_tools
	--target=${TARGET_TRIPLET}
	--with-sysroot=<root_dir>/cross_tools/${TARGET_TRIPLET}
	--with-static-standard-libraries
	--enable-deterministic-archives
	--disable-compressed-debug-sections
	--disable-nls
	--disable-werror
	--disable-multilib

build = cd build && make
pkg_create = cd build && make DESTDIR=<pkg_dir> install



[ musl_2_cross ]

env = 	CC="x86_64-xx-linux-musl-gcc -static-pie" AR="x86_64-xx-linux-musl-ar"
	AS="x86_64-xx-linux-musl-as" RANLIB="x86_64-xx-linux-musl-ranlib"
	LD="x86_64-xx-linux-musl-ld" STRIP="x86_64-xx-linux-musl-strip"

prepare = tar --no-same-owner -xf <src_path> -C <tmp_dir>

# adjustments (commands before patches) are needed when host is glibc based
configure = echo 'int main(){}' > dummy.c &&
	${TARGET_TRIPLET}-gcc dummy.c &&
	ln -svf lib <root_dir>/tools/lib64 &&
	git apply -v <prog_dir>/patch/<ver>/CVE-2022-38533.patch &&
	git apply -v <prog_dir>/patch/<ver>/ld-fix-static-linking.patch &&
	git apply -v <prog_dir>/patch/<ver>/revert_gnu.attributes_check.patch &&
	sed '6009s/$add_dir//' -i ltmain.sh &&
	mkdir -p build && cd build && ../configure
	--prefix=/tools
	--with-lib-path=/tools/lib
	--build=$(../config.guess)
	--host=${TARGET_TRIPLET}
	--target=${TARGET_TRIPLET}
	--with-sysroot=<root_dir>/cross_tools
	--with-static-standard-libraries
	--enable-gprofng=no
	--disable-nls
	--disable-werror
	--disable-multilib

Build also a linker that will be used later after adjusting the toolchain
build = cd build && make &&
	make -C ld clean &&
	make -C ld LIB_PATH=/usr/lib:/lib

pkg_create = cd build && make DESTDIR=<pkg_dir> install &&
	cp -v ld/ld-new <pkg_dir>/tools/bin

