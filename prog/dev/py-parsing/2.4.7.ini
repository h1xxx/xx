[ src ]

url = https://pypi.io/packages/source/p/pyparsing/pyparsing-<ver>.tar.gz
src_type = tar
src_dirname = pyparsing-<ver>



[ vars ]



[ std ]

env = PYTHONHASHSEED=0
prepare = tar --no-same-owner -xf <src_path> -C <tmp_dir>

configure =
build =

# can't use setuptools since setuptools depends on this
pkg_create = _site_pkgs="$(python3 -c 'import site; print(site.getsitepackages()[0])')" &&
	_py3ver="$(python3 -c 'import sys; print("{}.{}".format(sys.version_info.major, sys.version_info.minor))')" &&
	mkdir -p "<pkg_dir>/${_site_pkgs}" &&
	cp -rv pyparsing.egg-info "<pkg_dir>/${_site_pkgs}/ordered_set-<ver>-py${_py3ver}.egg-info" &&
	cp -rv pyparsing.py "<pkg_dir>/${_site_pkgs}"/ &&
	python3 -m compileall -f -q <pkg_dir>/${_site_pkgs}/*.py &&
	find <pkg_dir> -depth -type f -name '*.py[co]' -delete
		-o -type d -name __pycache__ -delete &&
	rmdir <pkg_dir>/bin



[ musl ]

env = PYTHONHASHSEED=0
prepare = tar --no-same-owner -xf <src_path> -C <tmp_dir>

configure =
build =

# can't use setuptools since setuptools depends on this
pkg_create = _site_pkgs="$(python3 -c 'import site; print(site.getsitepackages()[0])')" &&
	_py3ver="$(python3 -c 'import sys; print("{}.{}".format(sys.version_info.major, sys.version_info.minor))')" &&
	mkdir -p "<pkg_dir>/${_site_pkgs}" &&
	cp -rv pyparsing.egg-info "<pkg_dir>/${_site_pkgs}/ordered_set-<ver>-py${_py3ver}.egg-info" &&
	cp -rv pyparsing.py "<pkg_dir>/${_site_pkgs}"/ &&
	python3 -m compileall -f -q <pkg_dir>/${_site_pkgs}/*.py &&
	find <pkg_dir> -depth -type f -name '*.py[co]' -delete
		-o -type d -name __pycache__ -delete

