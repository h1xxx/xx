[ src ]

url = https://www.wireshark.org/download/src/wireshark-<ver>.tar.xz
src_type = tar
src_dirname = <prog>-<ver>



[ vars ]



[ std ]

env =
prepare = tar --no-same-owner -xf <src_path> -C <tmp_dir>
configure = mkdir build && cd build && cmake
	-D CMAKE_BUILD_TYPE=Release
	-D CMAKE_INSTALL_PREFIX=/usr
	-D CMAKE_INSTALL_LIBDIR=lib
	-D CMAKE_INSTALL_RPATH=
	-D CMAKE_SKIP_RPATH=ON
	-D BUILD_wireshark=OFF
	-D BUILD_randpkt=OFF
	-D BUILD_dftest=OFF
	-D ENABLE_CAP=OFF
	-D ENABLE_BROTLI=OFF
	-D ENABLE_PLUGINS=OFF
	..

build = cd build && make
pkg_create = cd build && make DESTDIR=<pkg_dir> install



[ musl ]

# not working, order of libraries during linking is messed up

env = CC='gcc -static-pie' CXX='g++ -static-pie'
prepare = tar --no-same-owner -xf <src_path> -C <tmp_dir>

# cmake doesn't find required static libs, so we need to define them explicitly
configure =  sed -i -e '/CMAKE_POSITION_INDEPENDENT_CODE/d'
		-e 's|set(editcap_LIBS|&\n\t\tpcre|'
		-e 's|set(tshark_LIBS|&\n\t\tgnutls|'
		-e 's|set(tshark_LIBS|&\n\t\tnettle|'
		-e 's|set(tshark_LIBS|&\n\t\ttasn1|'
		-e 's|set(rawshark_LIBS|&\n\t\tgnutls|'
		-e 's|set(rawshark_LIBS|&\n\t\tnettle|'
		-e 's|set(rawshark_LIBS|&\n\t\ttasn1|'
		-e 's|set(sharkd_LIBS|&\n\t\tgnutls|'
		-e 's|set(sharkd_LIBS|&\n\t\tnettle|'
		-e 's|set(sharkd_LIBS|&\n\t\ttasn1|'
		CMakeLists.txt &&
	mkdir build && cd build && cmake
	-D CMAKE_BUILD_TYPE=Release
	-D CMAKE_INSTALL_PREFIX=/
	-D CMAKE_INSTALL_RPATH=
	-D CMAKE_SKIP_RPATH=ON
	-D CMAKE_DL_LIBS=pcre
	-D BUILD_wireshark=OFF
	-D BUILD_randpkt=OFF
	-D BUILD_dftest=OFF
	-D BUILD_fuzzshark=OFF
	-D ENABLE_BROTLI=OFF
	-D ENABLE_PLUGINS=OFF
	-D DISABLE_DEBUG=ON
	-D ENABLE_STATIC=ON
	-D USE_STATIC=ON
	..

build = cd build && make
pkg_create = cd build && make DESTDIR=<pkg_dir> install

