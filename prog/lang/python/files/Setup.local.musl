# modules for static compilation copied from ./Modules/Setup

*static*

# GNU readline.

readline readline.c -lreadline -ltinfow


# Modules that should always be present (non UNIX dependent):

array arraymodule.c	# array objects
cmath cmathmodule.c _math.c -DPy_BUILD_CORE_MODULE # -lm # complex math library functions
math mathmodule.c _math.c -DPy_BUILD_CORE_MODULE # -lm # math library functions, e.g. sin()
_contextvars _contextvarsmodule.c  # Context Variables
_struct _struct.c	# binary structure packing/unpacking
_weakref _weakref.c	# basic weak reference support
#_testcapi _testcapimodule.c    # Python C API test module
_testinternalcapi _testinternalcapi.c -I$(srcdir)/Include/internal -DPy_BUILD_CORE_MODULE  # Python internal C API test module
_random _randommodule.c -DPy_BUILD_CORE_MODULE	# Random number generator
_elementtree -I$(srcdir)/Modules/expat -DHAVE_EXPAT_CONFIG_H -DUSE_PYEXPAT_CAPI _elementtree.c	# elementtree accelerator
_pickle _pickle.c	# pickle accelerator
_datetime _datetimemodule.c	# datetime accelerator
_zoneinfo _zoneinfo.c	# zoneinfo accelerator
_bisect _bisectmodule.c	# Bisection algorithms
_heapq _heapqmodule.c	# Heap queue algorithm
_asyncio _asynciomodule.c  # Fast asyncio Future
_json -I$(srcdir)/Include/internal -DPy_BUILD_CORE_BUILTIN _json.c	# _json speedups
_statistics _statisticsmodule.c # statistics accelerator

unicodedata unicodedata.c    # static Unicode character database


# Modules with some UNIX dependencies -- on by default:

fcntl fcntlmodule.c	# fcntl(2) and ioctl(2)
spwd spwdmodule.c		# spwd(3)
grp grpmodule.c		# grp(3)
select selectmodule.c	# select(2); not on ancient System V

# Memory-mapped files (also works on Win32).
mmap mmapmodule.c

# CSV file helper
_csv _csv.c

# Socket module helper for socket(2)
_socket socketmodule.c

# Socket module helper for SSL support; you must comment out the other
# socket line above, and possibly edit the SSL variable:
SSL=/
_ssl _ssl.c \
	-DUSE_SSL -I$(SSL)/include -I$(SSL)/include/openssl \
	-L$(SSL)/lib -lssl -lcrypto

# The crypt module is now disabled by default because it breaks builds
# on many systems (where -lcrypt is needed), e.g. Linux (I believe).
_crypt _cryptmodule.c -lcrypt	# crypt(3); needs -lcrypt on some systems


# Some more UNIX dependent modules -- off by default, since these
# are not supported by all UNIX systems:

_posixsubprocess _posixsubprocess.c  # POSIX subprocess module helper


# The _md5 module implements the RSA Data Security, Inc. MD5
# Message-Digest Algorithm, described in RFC 1321.

_md5 md5module.c


# The _sha module implements the SHA checksum algorithms.
# (NIST's Secure Hash Algorithms.)
_sha1 sha1module.c
_sha256 sha256module.c -DPy_BUILD_CORE_BUILTIN
_sha512 sha512module.c -DPy_BUILD_CORE_BUILTIN
_sha3 _sha3/sha3module.c

# _blake module
_blake2 _blake2/blake2module.c _blake2/blake2b_impl.c _blake2/blake2s_impl.c


# The _tkinter module.
#
# The command for _tkinter is long and site specific.  Please
# uncomment and/or edit those parts as indicated.  If you don't have a
# specific extension (e.g. Tix or BLT), leave the corresponding line
# commented out.  (Leave the trailing backslashes in!  If you
# experience strange errors, you may want to join all uncommented
# lines and remove the backslashes -- the backslash interpretation is
# done by the shell's "read" command and it may not be implemented on
# every system.

# *** Always uncomment this (leave the leading underscore in!):
#_tkinter _tkinter.c tkappinit.c -DWITH_APPINIT \
#	-L/lib \
#	-I/include \
#	-ltcl8.6
#??? -ltk8.6

# Lance Ellinghaus's syslog module
syslog syslogmodule.c		# syslog daemon interface

# Curses support, requiring the System V version of curses, often
# provided by the ncurses library.  e.g. on Linux, link with -lncurses
# instead of -lcurses).

#_curses _cursesmodule.c -lncurses -ltinfow
# Wrapper for the panel library that's part of ncurses and SYSV curses.
#_curses_panel _curses_panel.c -lpanel -ltinfow -L/lib


# Modules that provide persistent dictionary-like semantics.  You will
# probably want to arrange for at least one of them to be available on
# your machine, though none are defined by default because of library
# dependencies.  The Python module dbm/__init__.py provides an
# implementation independent wrapper for these; dbm/dumb.py provides
# similar functionality (but slower of course) implemented in Python.

#_dbm _dbmmodule.c 	# dbm(3) may require -lndbm or similar

# Anthony Baxter's gdbm module.  GNU dbm(3) will require -lgdbm:

_gdbm _gdbmmodule.c -I/include -L/lib -lgdbm


# Helper module for various ascii-encoders
binascii binascii.c

# Fred Drake's interface to the Python parser
parser parsermodule.c


# Andrew Kuchling's zlib module.
# This require zlib 1.1.3 (or later).
# See http://www.gzip.org/zlib/
zlib zlibmodule.c -I$(prefix)/include -L$(exec_prefix)/lib -lz

# Interface to the Expat XML parser
# More information on Expat can be found at www.libexpat.org.
#
pyexpat expat/xmlparse.c expat/xmlrole.c expat/xmltok.c pyexpat.c -I$(srcdir)/Modules/expat -DHAVE_EXPAT_CONFIG_H -DXML_POOR_ENTROPY -DUSE_PYEXPAT_CAPI

# Hye-Shik Chang's CJKCodecs

# multibytecodec is required for all the other CJK codec modules
#_multibytecodec cjkcodecs/multibytecodec.c

#_codecs_cn cjkcodecs/_codecs_cn.c
#_codecs_hk cjkcodecs/_codecs_hk.c
#_codecs_iso2022 cjkcodecs/_codecs_iso2022.c
#_codecs_jp cjkcodecs/_codecs_jp.c
#_codecs_kr cjkcodecs/_codecs_kr.c
#_codecs_tw cjkcodecs/_codecs_tw.c


# other modules 
_bz2 _bz2module.c -I$(prefix)/include -L$(exec_prefix)/lib -lbz2
time timemodule.c # -lm # time operations and variables
_uuid _uuidmodule.c -I/include -L/lib -luuid
_hashlib _hashopenssl.c -I/include -L/lib
#_lsprof _lsprof.c -I/include -L/lib
#_lzma _lzmamodule.c -I/include -L/lib
_opcode _opcode.c -I/include -L/lib
resource resource.c -I/include -L/lib
_queue _queuemodule.c -I/include -L/lib

DECIMAL_DEFS=-DCONFIG_64=1 -DASM=1
_decimal \
	_decimal/_decimal.c \
	_decimal/libmpdec/basearith.c \
	_decimal/libmpdec/constants.c \
	_decimal/libmpdec/context.c \
	_decimal/libmpdec/convolute.c \
	_decimal/libmpdec/crt.c \
	_decimal/libmpdec/difradix2.c \
	_decimal/libmpdec/fnt.c \
	_decimal/libmpdec/fourstep.c \
	_decimal/libmpdec/io.c \
	_decimal/libmpdec/mpdecimal.c \
	_decimal/libmpdec/numbertheory.c \
	_decimal/libmpdec/sixstep.c \
	_decimal/libmpdec/transpose.c \
	$(DECIMAL_DEFS) \
	-I$(srcdir)/Modules/_decimal \
	-I$(srcdir)/Modules/_decimal/libmpdec \
	-I$(prefix)/include -L$(exec_prefix)/lib \
	-I/include -L/lib -lmpdec

# _opcode
_opcode _opcode.c

# _lsprof
_lsprof _lsprof.c rotatingtree.c

# _sqlite3
SQLITE_DEFS=-DMODULE_NAME='"sqlite3"' -DSQLITE_OMIT_LOAD_EXTENSION
# @if freebsd: SQLITE_LIBS=-I/usr/local/include -L/usr/local/lib
# @if not freebsd: SQLITE_LIBS=
_sqlite3 \
	_sqlite/module.c \
	_sqlite/cache.c \
	_sqlite/connection.c \
	_sqlite/cursor.c \
	_sqlite/microprotocols.c \
	_sqlite/prepare_protocol.c \
	_sqlite/row.c \
	_sqlite/statement.c \
	_sqlite/util.c \
	$(SQLITE_DEFS) -I$(srcdir)/Modules/_sqlite \
	$(SQLITE_LIBS) \
	-I$(prefix)/include -L$(exec_prefix)/lib \
	-lsqlite3

# multiprocessing
#_multiprocessing \
#	_multiprocessing/semaphore.c \
#	_multiprocessing/multiprocessing.c \
#	-I$(srcdir)/Modules/_multiprocessing

# Optional add-on for multiprocessing to use shared memory
#POSIXSHMEM_LIBS=rt
POSIXSHMEM_LIBS=
_posixshmem \
	_multiprocessing/posixshmem.c \
	-I$(srcdir)/Modules/_multiprocessing \
	$(POSIXSHMEM_LIBS)

# queue
_queue _queuemodule.c

CTYPES_FLAGS=-DHAVE_FFI_PREP_CIF_VAR=1 -DHAVE_FFI_PREP_CLOSURE_LOC=1 \
	-DHAVE_FFI_CLOSURE_ALLOC=1 -DPy_NO_ENABLE_SHARED=y
_ctypes _ctypes/_ctypes.c \
	_ctypes/callbacks.c  _ctypes/callproc.c _ctypes/cfield.c \
	_ctypes/stgdict.c $(CTYPES_FLAGS) -lffi -L/lib
_ctypes_test _ctypes/_ctypes_test.c



*disabled*

_multiprocessing
_lzma

_curses
_curses_panel

_tkinter
_multibytecodec
_codecs_jp
_codecs_kr
_codecs_tw
_codecs_cn
_codecs_hk
_codecs_iso2022

_testbuffer
_testcapi
_testimportmultiple
_testmultiphase
_xxsubinterpreters
_xxtestfuzz
audioop
ossaudiodev
termios
xxlimited 
