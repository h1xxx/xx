[ src ]

url = https://golang.org/dl/go<ver>.src.tar.gz
https://dl.google.com/go/go1.4-bootstrap-20171003.tar.gz

src_type = tar
src_dirname = go



[ vars ]



[ std ]

env =
prepare = tar --no-same-owner -xf <src_path> -C <tmp_dir>
configure =
build = export CGO_ENABLED=1
	GOROOT=$(pwd)
	GOROOT_FINAL=/usr/lib/go
	GOBIN=${GOROOT}/bin &&
	cd src/ &&
	./make.bash

pkg_create = mkdir -p <pkg_dir>/usr/lib/go <pkg_dir>/usr/bin &&
	find -depth -type d -iname testdata -exec rm -r {} \\; &&
	cp -av api bin doc lib pkg misc src test <pkg_dir>/usr/lib/go &&
	ln -sv ../lib/go/bin/go <pkg_dir>/usr/bin/go &&
	ln -sv ../lib/go/bin/gofmt <pkg_dir>/usr/bin/gofmt



[ bootstrap ]

env =
prepare = tar --no-same-owner -xf <src_path> -C <tmp_dir> &&
	mkdir <tmp_dir>/go1.4 &&
	tar --no-same-owner -xf <src_dir>/go1.4-bootstrap-20171003.tar.gz
		-C <tmp_dir>/go1.4/ &&
	cd <tmp_dir>/go1.4/go/src &&
	export CGO_ENABLED=0 &&
	./make.bash

configure =
build = export CGO_ENABLED=1
	GOROOT_BOOTSTRAP=<tmp_dir>/go1.4/go
	GOROOT=$(pwd)
	GOROOT_FINAL=/usr/lib/go
	GOBIN=${GOROOT}/bin &&
	cd src/ &&
	./make.bash

pkg_create = mkdir -p <pkg_dir>/usr/lib/go <pkg_dir>/usr/bin &&
	find -depth -type d -iname testdata -exec rm -r {} \\; &&
	cp -av api bin doc lib pkg misc src test <pkg_dir>/usr/lib/go &&
	ln -sv ../lib/go/bin/go <pkg_dir>/usr/bin/go &&
	ln -sv ../lib/go/bin/gofmt <pkg_dir>/usr/bin/gofmt
